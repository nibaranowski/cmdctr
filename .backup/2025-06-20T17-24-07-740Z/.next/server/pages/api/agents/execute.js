"use strict";(()=>{var e={};e.id=544,e.ids=[544],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},5272:(e,t,a)=>{a.r(t),a.d(t,{config:()=>m,default:()=>_,routeModule:()=>f});var i={};a.r(i),a.d(i,{default:()=>h});var n=a(1802),r=a(7153),s=a(6249),o=a(8214);class c{constructor(e,t){this.agent=e,this.context=t}async updateStatus(e,t){this.agent.status=e,t&&(this.agent.performance_metrics.last_activity=t),this.agent.updated_at=new Date().toISOString(),console.log(`Agent ${this.agent.name} status updated to ${e}: ${t||""}`)}logActivity(e,t){let a=new Date().toISOString();this.agent.performance_metrics.last_activity=a,console.log(`[${a}] ${this.agent.name}: ${e}`)}getConfig(){return this.agent.configuration||{}}validateContext(){return this.context.metabox?!!this.context.phase||(this.logActivity("Error: Missing phase in context"),!1):(this.logActivity("Error: Missing metabox in context"),!1)}getCoreObjects(){return this.context.coreObjects||[]}createCoreObject(e,t,a,i){return{id:`co_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,title:e,description:t,status:"pending",phase_id:this.context.phase.id,metabox_id:this.context.metabox.id,agent_id:this.agent.id,activity_log:[],data:a||{},metadata:i||{},created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}updateCoreObject(e,t){return{...e,...t,updated_at:new Date().toISOString()}}getUserInput(){return this.context.userInput}getMetadata(){return this.context.metadata||{}}setMetadata(e,t){this.context.metadata||(this.context.metadata={}),this.context.metadata[e]=t}isActive(){return"active"===this.agent.status}isPaused(){return"idle"===this.agent.status}isCompleted(){return"offline"===this.agent.status}getAgentType(){return this.agent.agent_type}getAgentName(){return this.agent.name}getAgentDescription(){return this.agent.description||""}async handleError(e){return console.error(`Agent ${this.agent.name} error:`,e),await this.updateStatus("error",e.message),this.logActivity(e.message),{success:!1,message:e.message,metadata:{agent_id:this.agent.id,agent_name:this.agent.name,timestamp:new Date().toISOString()}}}createResult(e,t){return this.updateStatus("active"),{success:!0,message:"Operation successful",data:e,metadata:{agent_id:this.agent.id,agent_name:this.agent.name,timestamp:new Date().toISOString(),...t}}}toAgentModel(){return this.agent}}class l extends c{constructor(e,t){super(e,t)}async execute(){try{if(this.logActivity("Starting AI outreach execution"),!this.validateContext())return{success:!1,message:"Invalid context: missing required metabox or phase"};await this.updateStatus("busy","Performing AI-powered outreach");let e=this.getCoreObjects();if(0===e.length)return{success:!1,message:"No investors found to outreach to. Please run investor research first."};let t=await this.performOutreach(e),a=[];for(let e of t){let t=this.createCoreObject(`Outreach: ${e.investor_name}`,e.outreach_description,{investor_name:e.investor_name,outreach_type:e.type,message_content:e.message,contact_method:e.contact_method,response_received:e.response_received,response_content:e.response_content,follow_up_needed:e.follow_up_needed,follow_up_date:e.follow_up_date},{outreach_date:new Date().toISOString(),success_probability:e.success_probability,next_action:e.next_action});a.push(t),this.logActivity(`Created outreach record for ${e.investor_name}`)}return await this.updateStatus("active",`Outreach completed: ${t.length} contacts made`),this.logActivity(`AI outreach execution completed successfully. Contacted ${t.length} investors.`),{success:!0,message:`Successfully performed outreach to ${t.length} investors`,coreObjects:a,nextActions:["Monitor response rates","Schedule follow-up calls","Prepare for investor meetings","Update pitch materials based on feedback"],metadata:{outreach_date:new Date().toISOString(),total_contacts_made:t.length,response_rate:this.calculateResponseRate(t),metabox_id:this.context.metabox.id,phase_id:this.context.phase.id}}}catch(e){return this.handleError(e)}}async performOutreach(e){this.logActivity("Performing AI-powered investor outreach"),await new Promise(e=>setTimeout(e,3e3));let t=[];for(let a of e){let e=a.data,i=(e?.investor_type,a.title.replace("Investor: ","")),n=this.generatePersonalizedMessage(_investorData),r=Math.random()>.7,s=r?this.generateResponse(_investorData):void 0,o=!r||r&&Math.random()>.5,c=o?this.calculateFollowUpDate():void 0;t.push({investor_name:i,type:this.determineOutreachType(_investorData),contact_method:e?.contact_info||"email",message:n,outreach_description:`AI-generated personalized outreach to ${i} via ${this.determineOutreachType(_investorData)}`,response_received:r,...s&&{response_content:s},follow_up_needed:o,...c&&{follow_up_date:c},success_probability:this.calculateSuccessProbability(_investorData),next_action:this.determineNextAction(r,o)})}return t}generatePersonalizedMessage(e){let t=e?.investor_type,a=e?.portfolio_companies||[];return"Venture Capital"===t?`Hi there,

I'm reaching out because I noticed your impressive track record with companies like ${a.slice(0,2).join(" and ")}. 

We're building a B2B SaaS platform that's showing strong unit economics and 100%+ growth rates. Given your expertise in the space, I'd love to share our story and get your thoughts.

Would you be open to a 15-minute call next week?

Best regards,
[Your Name]`:"Accelerator"===t?`Hello,

I'm excited to share that we're applying to your accelerator program. We're a team of experienced founders building a B2B SaaS solution that's already generating revenue and showing strong traction.

We believe your program's focus on rapid iteration and growth would be perfect for us. I'd love to discuss our application and get any feedback you might have.

Looking forward to hearing from you!

Best,
[Your Name]`:`Hi,

I'm reaching out to introduce our company. We're building innovative B2B SaaS solutions and would love to connect with you.

Best regards,
[Your Name]`}generateResponse(e){let t=["Thanks for reaching out. Your company looks interesting. Let's schedule a call for next week.","I'd be happy to learn more about your business. Can you send over your pitch deck?","Thanks for the introduction. I'm not currently investing in this space, but I'll keep you in mind.","Your company sounds promising. I'd like to introduce you to one of my partners who focuses on this area.","Thanks for reaching out. I'm currently at capacity with new investments, but I'll follow your progress."];return t[Math.floor(Math.random()*t.length)]}determineOutreachType(e){let t=["email","linkedin","phone","warm_intro"];return t[Math.floor(Math.random()*t.length)]}calculateSuccessProbability(e){let t=.3;return e?.investor_type==="Venture Capital"?t=.4:e?.investor_type==="Accelerator"&&(t=.6),Math.min(.95,t+.3*Math.random())}calculateFollowUpDate(){let e=[3,5,7,10,14],t=Math.floor(Math.random()*e.length),a=e[t]??7,i=new Date;return i.setDate(i.getDate()+a),i.toISOString()}determineNextAction(e,t){return e?"Schedule meeting or call":t?"Send follow-up message":"Move to next prospect"}calculateResponseRate(e){let t=e.filter(e=>e.response_received).length;return e.length>0?t/e.length*100:0}}class d extends c{constructor(e,t){super(e,t)}async execute(){try{if(this.logActivity("Starting investor research execution"),!this.validateContext())return{success:!1,message:"Invalid context: missing required metabox or phase"};await this.updateStatus("busy","Researching potential investors");let e=await this.performResearch(),t=[];for(let a of e){let e=this.createCoreObject(`Investor: ${a.name}`,a.description,{investor_type:a.type,investment_stage:a.stage,investment_size:a.size,portfolio_companies:a.portfolio,contact_info:a.contact,research_notes:a.notes},{research_date:new Date().toISOString(),confidence_score:a.confidence,next_action:a.nextAction});t.push(e),this.logActivity(`Created investor profile for ${a.name}`)}return await this.updateStatus("active",`Research completed: ${t.length} investors identified`),this.logActivity(`Research execution completed successfully. Found ${t.length} potential investors.`),{success:!0,message:`Successfully researched ${t.length} potential investors`,coreObjects:t,nextActions:["Review investor profiles for fit","Prioritize outreach list","Prepare personalized pitch materials","Schedule follow-up research for top prospects"],metadata:{research_date:new Date().toISOString(),total_investors_found:t.length,metabox_id:this.context.metabox.id,phase_id:this.context.phase.id}}}catch(e){return this.handleError(e)}}async performResearch(){return this.logActivity("Performing AI-powered investor research"),await new Promise(e=>setTimeout(e,2e3)),[{name:"Sequoia Capital",type:"Venture Capital",stage:"Series A to C",size:"$1M - $50M",portfolio:["Apple","Google","Airbnb","Stripe"],contact:"partners@sequoiacap.com",description:"Leading venture capital firm with strong track record in technology companies",notes:"Has invested in similar B2B SaaS companies. Warm intro available through portfolio company CEO.",confidence:.95,nextAction:"Schedule intro call with partner"},{name:"Andreessen Horowitz",type:"Venture Capital",stage:"Seed to Series B",size:"$500K - $25M",portfolio:["Facebook","Twitter","GitHub","Coinbase"],contact:"invest@a16z.com",description:"Technology-focused venture capital firm with deep expertise in software",notes:"Active in AI/ML space. Portfolio includes several successful SaaS companies.",confidence:.88,nextAction:"Send detailed pitch deck"},{name:"Y Combinator",type:"Accelerator",stage:"Pre-seed to Series A",size:"$125K - $5M",portfolio:["Dropbox","Airbnb","Stripe","Reddit"],contact:"apply@ycombinator.com",description:"Premier startup accelerator with extensive network and resources",notes:"Perfect for early-stage companies. Strong alumni network for follow-on funding.",confidence:.92,nextAction:"Apply for next batch"}]}}let u={fundraising:{id:"fundraising",name:"Fundraising",description:"End-to-end fundraising workflow with AI-powered agents",phases:["identifying_investors","conflict_check","network_intro","direct_outreach","automated_intro","scheduling","avatar_negotiation","negotiation","closing"],agents:[{id:"investor_research",name:"Investor Research Agent",description:"Identifies and researches potential investors that match company criteria",phase:"identifying_investors",metaBox:"fundraising",config:{apis:["crunchbase","pitchbook","linkedin"],updateFrequency:"24h"}},{id:"conflict_detection",name:"Conflict Detection Agent",description:"Analyzes potential conflicts with investors portfolio companies",phase:"conflict_check",metaBox:"fundraising",config:{conflictTypes:["direct_competitor","indirect_competitor","market_overlap"],dataSource:["crunchbase","internal_db"]}},{id:"warm_intro_scout",name:"Warm Intro Scout Agent",description:"Identifies potential warm introduction paths to investors",phase:"network_intro",metaBox:"fundraising",config:{networks:["linkedin","internal_network","apollo"],depthLevel:2}},{id:"direct_outreach",name:"Direct Outreach Agent",description:"Manages direct outreach campaigns to investors",phase:"direct_outreach",metaBox:"fundraising",config:{channels:["email","linkedin"],templates:["intro","follow_up","meeting_request"]}},{id:"network_intersection",name:"Network Intersection Agent",description:"Analyzes network intersections for automated introductions",phase:"automated_intro",metaBox:"fundraising",config:{networks:["linkedin","angellist","internal"],minConnectionStrength:7}},{id:"auto_scheduler",name:"Auto Scheduler Agent",description:"Handles meeting scheduling with investors",phase:"scheduling",metaBox:"fundraising",config:{calendars:["google","outlook"],bufferTime:"15m"}},{id:"avatar_pitch",name:"Avatar Pitch Agent",description:"AI avatar for initial pitch meetings and Q&A",phase:"avatar_negotiation",metaBox:"fundraising",config:{models:["gpt4","claude"],knowledgeBase:["pitch_deck","financials","market"]}},{id:"negotiation",name:"Negotiation Agent",description:"Assists in term sheet negotiation and deal structuring",phase:"negotiation",metaBox:"fundraising",config:{templates:["term_sheet","cap_table"],benchmarks:["market_data","historical"]}},{id:"closing",name:"Closing Agent",description:"Manages closing process, documentation and wire transfers",phase:"closing",metaBox:"fundraising",config:{documents:["closing_docs","wire_instructions"],notifications:["email","slack"]}}]}};class g{constructor(){this.agents=new Map,this.capabilities=new Map,this.initializeCapabilities()}static getInstance(){return g.instance||(g.instance=new g),g.instance}initializeCapabilities(){this.capabilities.set("investor_research",{name:"Investor Research",description:"Deep research on investors, their portfolio, and investment thesis",required_skills:["market_research","financial_analysis","network_analysis"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]}),this.capabilities.set("personalized_outreach",{name:"Personalized Outreach",description:"Creating and sending personalized outreach messages",required_skills:["communication","personalization","email_automation"],supported_phases:["fundraising","sales","marketing"],supported_metaboxes:["fundraising","sales","marketing"]}),this.capabilities.set("deal_flow_analysis",{name:"Deal Flow Analysis",description:"Analyzing deal flow patterns and investor behavior",required_skills:["data_analysis","pattern_recognition","financial_modeling"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]}),this.capabilities.set("network_analysis",{name:"Network Analysis",description:"Mapping and analyzing investor networks and connections",required_skills:["network_analysis","graph_theory","relationship_mapping"],supported_phases:["fundraising","sales"],supported_metaboxes:["fundraising","sales"]}),this.capabilities.set("financial_analysis",{name:"Financial Analysis",description:"Analyzing financial data and investment patterns",required_skills:["financial_modeling","data_analysis","valuation"],supported_phases:["fundraising","finance"],supported_metaboxes:["fundraising","finance"]}),this.capabilities.set("content_creation",{name:"Content Creation",description:"Creating marketing content and materials",required_skills:["copywriting","design","brand_strategy"],supported_phases:["marketing"],supported_metaboxes:["marketing"]}),this.capabilities.set("campaign_management",{name:"Campaign Management",description:"Managing marketing campaigns and automation",required_skills:["project_management","automation","analytics"],supported_phases:["marketing"],supported_metaboxes:["marketing"]}),this.capabilities.set("lead_generation",{name:"Lead Generation",description:"Identifying and qualifying sales leads",required_skills:["prospecting","qualification","research"],supported_phases:["sales"],supported_metaboxes:["sales"]}),this.capabilities.set("sales_automation",{name:"Sales Automation",description:"Automating sales processes and follow-ups",required_skills:["automation","crm_management","process_optimization"],supported_phases:["sales"],supported_metaboxes:["sales"]}),this.capabilities.set("feature_prioritization",{name:"Feature Prioritization",description:"Prioritizing product features based on user feedback and business goals",required_skills:["product_management","data_analysis","user_research"],supported_phases:["product"],supported_metaboxes:["product"]}),this.capabilities.set("user_research",{name:"User Research",description:"Conducting user research and gathering feedback",required_skills:["research_methods","data_analysis","user_empathy"],supported_phases:["product"],supported_metaboxes:["product"]})}registerAgent(e){let t={agent:e,metadata:{created_at:new Date().toISOString(),last_updated:new Date().toISOString(),usage_count:0,average_performance:0}};this.agents.set(e.id,t),o.k.info(`Registered agent: ${e.name} (${e.id})`)}unregisterAgent(e){let t=this.agents.delete(e);return t?o.k.info(`Unregistered agent: ${e}`):o.k.warn(`Attempted to unregister non-existent agent: ${e}`),t}getAgent(e){let t=this.agents.get(e);return t||o.k.warn(`Agent not found: ${e}`),t?t.agent:null}getAllAgents(){return o.k.info("Fetching all registered agents"),Array.from(this.agents.values()).map(e=>e.agent)}findAgentsByCapability(e){return this.getAllAgents().filter(t=>t.capabilities.includes(e))}findAgentsByPhase(e){return this.getAllAgents().filter(t=>t.phase_id===e)}findAgentsByMetabox(e){return this.getAllAgents().filter(t=>t.metabox_id===e)}findAgentsByFilter(e){return this.getAllAgents().filter(t=>t.company_id===e.company_id&&(!e.metabox_id||t.metabox_id===e.metabox_id)&&(!e.phase_id||t.phase_id===e.phase_id)&&(!e.agent_type||!!e.agent_type.includes(t.agent_type))&&(!e.status||!!e.status.includes(t.status))&&(!e.capabilities||!!e.capabilities.some(e=>t.capabilities.includes(e)))&&(void 0===e.is_available||t.availability.is_available===e.is_available)&&(!e.current_core_object_id||t.current_core_object_id===e.current_core_object_id)&&(!e.created_at_before||!(t.created_at>e.created_at_before))&&(!e.created_at_after||!(t.created_at<e.created_at_after)))}findBestAgentForTask(e,t,a,i){let n=this.getAllAgents().filter(n=>n.company_id===t&&!!e.every(e=>n.capabilities.includes(e))&&!!n.availability.is_available&&!(n.availability.current_task_count>=n.availability.max_concurrent_tasks)&&(!a||!n.phase_id||n.phase_id===a)&&(!i||!n.metabox_id||n.metabox_id===i));if(0===n.length)return null;let r=n.map(e=>{let t;let a=this.agents.get(e.id);if(!a)return{agent:e,score:0};t=0+.4*a.metadata.average_performance+(.3*(100-e.availability.current_task_count/e.availability.max_concurrent_tasks*100)+.2*e.performance_metrics.success_rate);let i=(Date.now()-new Date(e.performance_metrics.last_activity).getTime())/864e5;return{agent:e,score:t+=.1*Math.max(0,100-10*i)}});return r.sort((e,t)=>t.score-e.score),r[0]?.agent||null}getCapabilities(){return Array.from(this.capabilities.values())}getCapability(e){return this.capabilities.get(e)||null}updateAgentPerformance(e,t){let a=this.agents.get(e);if(a){a.metadata.usage_count++,a.metadata.last_updated=new Date().toISOString();let i=a.metadata.average_performance,n=a.metadata.usage_count;a.metadata.average_performance=(i*(n-1)+t)/n,o.k.info(`Updated performance for agent ${e}: new avg=${a.metadata.average_performance}`)}else o.k.warn(`Attempted to update performance for non-existent agent: ${e}`)}createAgentFromTemplate(e,t){switch(e){case"investor_research":return o.k.info("Creating InvestorResearchAgent from template"),new d(t);case"ai_outreach":return o.k.info("Creating AIOutreachAgent from template"),new l(t);default:return o.k.warn(`Unknown agent template: ${e}`),null}}getAgentTemplates(){return[{name:"investor_research",description:"AI agent specialized in investor research and analysis",capabilities:["investor_research","network_analysis","financial_analysis"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]},{name:"ai_outreach",description:"AI agent specialized in personalized investor outreach",capabilities:["personalized_outreach","email_automation","follow_up_sequences"],supported_phases:["fundraising","sales","marketing"],supported_metaboxes:["fundraising","sales","marketing"]}]}getAgentStats(){let e=this.getAllAgents(),t=e.length,a=e.filter(e=>"active"===e.status).length,i={},n={};e.forEach(e=>{i[e.agent_type]=(i[e.agent_type]||0)+1,n[e.status]=(n[e.status]||0)+1});let r=e.reduce((e,t)=>e+t.performance_metrics.success_rate,0);return{total_agents:t,active_agents:a,agents_by_type:i,agents_by_status:n,average_performance:t>0?r/t:0}}}class p{constructor(){this.tasks=new Map,this.collaborations=new Map,this.taskQueue=[],this.registry=g.getInstance()}static getInstance(){return p.instance||(p.instance=new p),p.instance}async createTask(e,t,a,i,n,r="medium",s){let c={id:`task_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,type:e,priority:r,status:"pending",core_object_id:t,company_id:a,capabilities_required:i,context:n,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return n.phase_id&&(c.phase_id=n.phase_id),n.metabox_id&&(c.metabox_id=n.metabox_id),s&&(c.metadata=s),this.tasks.set(c.id,c),this.taskQueue.push(c.id),this.taskQueue.sort((e,t)=>{let a=this.tasks.get(e),i=this.tasks.get(t);if(!a||!i)return 0;let n={urgent:4,high:3,medium:2,low:1};return n[i.priority]-n[a.priority]}),o.k.setQueueLength(this.taskQueue.length),o.k.updateTaskMetrics("pending"),o.k.info(`Created task: ${c.id} (${e}) with priority ${r}`),c}async assignTask(e){let t=this.tasks.get(e);if(!t)throw o.k.error(`Task not found: ${e}`),Error(`Task not found: ${e}`);if("pending"!==t.status)throw o.k.error(`Task ${e} is not in pending status`),Error(`Task ${e} is not in pending status`);let a=this.registry.findBestAgentForTask(t.capabilities_required,t.company_id,t.phase_id,t.metabox_id);return a?a.availability.current_task_count>=a.availability.max_concurrent_tasks?(o.k.warn(`Agent ${a.id} is at capacity`),null):(t.assigned_agent_id=a.id,t.status="in_progress",t.updated_at=new Date().toISOString(),a.availability.current_task_count++,a.current_core_object_id=t.core_object_id,o.k.info(`Assigned task ${e} to agent ${a.name} (${a.id})`),a):(o.k.warn(`No suitable agent found for task ${e}`),null)}async executeTask(e){let t=this.tasks.get(e);if(!t)throw o.k.error(`Task not found: ${e}`),Error(`Task not found: ${e}`);if(!t.assigned_agent_id)throw o.k.error(`Task ${e} is not assigned to an agent`),Error(`Task ${e} is not assigned to an agent`);let a=this.registry.getAgent(t.assigned_agent_id);if(!a)throw o.k.error(`Assigned agent not found: ${t.assigned_agent_id}`),Error(`Assigned agent not found: ${t.assigned_agent_id}`);let i=o.k.startTimer("task_execution",{taskId:e,agentId:a.id,agentName:a.name,taskType:t.type});try{o.k.info(`Executing task ${e} with agent ${a.name}`);let n=await a.execute(t.context);t.status=n.success?"completed":"failed",t.result=n.data,t.error=n.error,t.completed_at=new Date().toISOString(),t.updated_at=new Date().toISOString(),a.availability.current_task_count--,a.availability.current_task_count<0&&(a.availability.current_task_count=0),n.success?this.registry.updateAgentPerformance(a.id,100):this.registry.updateAgentPerformance(a.id,0);let r=o.k.endTimer(i,{success:n.success,taskStatus:t.status});return r&&(o.k.updateTaskMetrics(t.status,r.duration),o.k.updateAgentMetrics(String(a.id??""),String(a.name??""),n.success,r.duration)),o.k.info(`Task ${e} ${n.success?"completed":"failed"}`),n}catch(r){o.k.error(`Error executing task ${e} with agent ${a?.name||"unknown"}:`,r);let n=o.k.endTimer(i,{success:!1,error:r instanceof Error?r.message:"Unknown error"});throw n&&(o.k.updateTaskMetrics("failed",n.duration),o.k.updateAgentMetrics(String(a.id??""),String(a.name??""),!1,n.duration)),t.status="failed",t.error=r instanceof Error?r.message:"Unknown error",t.updated_at=new Date().toISOString(),a.availability.current_task_count--,a.availability.current_task_count<0&&(a.availability.current_task_count=0),o.k.error(`Task ${e} execution failed:`,r),r}}async createCollaboration(e,t,a,i="parallel"){if(!this.tasks.get(e))throw Error(`Task not found: ${e}`);let n={task_id:e,primary_agent_id:t,collaborating_agents:a,collaboration_type:i,status:"active",created_at:new Date().toISOString()},r=`collab_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return this.collaborations.set(r,n),o.k.info(`Created collaboration for task ${e} with ${a.length} agents`),n}async executeCollaboration(e){let t=this.collaborations.get(e);if(!t)throw Error(`Collaboration not found: ${e}`);let a=this.tasks.get(t.task_id);if(!a)throw Error(`Task not found: ${t.task_id}`);let i=[];try{if("parallel"===t.collaboration_type){let e=t.collaborating_agents.map(async e=>{let i=this.registry.getAgent(e.agent_id);if(!i)throw Error(`Collaborating agent not found: ${e.agent_id}`);let n={...a.context,metadata:{...a.context.metadata,collaboration_role:e.role,primary_agent_id:t.primary_agent_id,contribution:e.contribution}};return await i.execute(n)}),n=await Promise.all(e);i.push(...n)}else if("sequential"===t.collaboration_type)for(let e of t.collaborating_agents){let n=this.registry.getAgent(e.agent_id);if(!n)throw Error(`Collaborating agent not found: ${e.agent_id}`);let r={...a.context,metadata:{...a.context.metadata,collaboration_role:e.role,primary_agent_id:t.primary_agent_id,contribution:e.contribution,previous_results:i}},s=await n.execute(r);i.push(s)}else if("review"===t.collaboration_type){let e=this.registry.getAgent(t.primary_agent_id);if(!e)throw Error(`Primary agent not found: ${t.primary_agent_id}`);let n=await e.execute(a.context);for(let e of(i.push(n),t.collaborating_agents)){let t=this.registry.getAgent(e.agent_id);if(!t)continue;let r={...a.context,metadata:{...a.context.metadata,collaboration_role:"reviewer",primary_result:n,contribution:e.contribution}},s=await t.execute(r);i.push(s)}}return t.status="completed",t.completed_at=new Date().toISOString(),o.k.info(`Collaboration ${e} completed with ${i.length} results`),i}catch(a){throw t.status="failed",o.k.error(`Collaboration ${e} failed:`,a),a}}async handoffTask(e,t,a){let i=this.tasks.get(e);if(!i)throw Error(`Task not found: ${e}`);let n=this.registry.getAgent(t);if(!n)throw Error(`Target agent not found: ${t}`);if(!i.capabilities_required.every(e=>n.capabilities.includes(e)))throw Error(`Target agent ${t} does not have required capabilities`);if(n.availability.current_task_count>=n.availability.max_concurrent_tasks)throw Error(`Target agent ${t} is at capacity`);if(i.assigned_agent_id){let e=this.registry.getAgent(i.assigned_agent_id);e&&(e.availability.current_task_count--,e.availability.current_task_count<0&&(e.availability.current_task_count=0))}return i.assigned_agent_id=t,i.updated_at=new Date().toISOString(),i.metadata={...i.metadata,handoff_reason:a,handoff_timestamp:new Date().toISOString()},n.availability.current_task_count++,n.current_core_object_id=i.core_object_id,o.k.info(`Handed off task ${e} from ${i.assigned_agent_id} to ${t}: ${a}`),!0}getTask(e){return this.tasks.get(e)||null}getTasksByStatus(e){return Array.from(this.tasks.values()).filter(t=>t.status===e)}getTasksByAgent(e){return Array.from(this.tasks.values()).filter(t=>t.assigned_agent_id===e)}getTasksByCompany(e){return Array.from(this.tasks.values()).filter(t=>t.company_id===e)}getTaskQueue(){return this.taskQueue.map(e=>this.tasks.get(e)).filter(Boolean)}getCollaboration(e){return this.collaborations.get(e)||null}getCollaborationsByTask(e){return Array.from(this.collaborations.values()).filter(t=>t.task_id===e)}getOrchestratorStats(){let e=Array.from(this.tasks.values()),t=e.length,a={},i={};e.forEach(e=>{a[e.status]=(a[e.status]||0)+1,i[e.priority]=(i[e.priority]||0)+1});let n=Array.from(this.collaborations.values()).filter(e=>"active"===e.status).length,r=e.filter(e=>"completed"===e.status&&e.completed_at);return{total_tasks:t,tasks_by_status:a,tasks_by_priority:i,active_collaborations:n,average_task_completion_time_hours:r.length>0?r.reduce((e,t)=>{let a=new Date(t.created_at).getTime();return e+(new Date(t.completed_at).getTime()-a)/36e5},0)/r.length:0}}getPhaseId(e){return"string"==typeof e?e:e&&"string"==typeof e.id?e.id:""}async executePhase(e,t){if(!u[e])throw o.k.error(`Meta box ${e} not found`),Error(`Meta box ${e} not found`);let a=function(e,t){let a=u[e];return a?a.agents.filter(e=>e.phase===t):[]}(e,t);if(0===a.length)throw o.k.error(`No agents found for phase ${t} in meta box ${e}`),Error(`No agents found for phase ${t} in meta box ${e}`);let i=[];for(let n of a)try{let a=String(t??""),r=this.registry.findAgentsByFilter({company_id:n.company_id||"",metabox_id:e,phase_id:a}).find(e=>e.name===String(n.name??""));if(!r)throw o.k.error(`Agent instance not found for ${String(n.name??"")} (id: ${String(n.id??"")}) in phase ${a}, metabox ${e}`),Error(`Agent instance not found for ${String(n.name??"")}`);let s=await r.execute({metabox_id:e,phase_id:a,company_id:n.company_id||"",metadata:{execution_type:"phase_execution",phase_id:a,meta_box_id:e}});i.push(s)}catch(r){let a=String(t??"");o.k.error(`Agent execution error for agent ${String(n.name??"")} (id: ${String(n.id??"")}) in phase ${a}, metabox ${e}:`,r),i.push({success:!1,data:null,error:r instanceof Error?r.message:"Unknown error",metadata:{agent_id:String(n.id??""),agent_name:String(n.name??""),metabox_id:e,phase_id:a,timestamp:new Date().toISOString(),execution_type:"phase_execution"}})}return i}async executeWorkflow(e){let t=u[e];if(!t)throw Error(`Meta box ${e} not found`);let a={};for(let i of t.phases)try{let t=this.getPhaseId(i)||"";a[t]=await this.executePhase(e,t)}catch(n){let t=this.getPhaseId(i)||"";o.k.error(`Phase execution error for ${t} in metabox ${e}:`,n),a[t]=[{success:!1,data:null,error:n instanceof Error?n.message:"Unknown error",metadata:{metabox_id:e,phase_id:t,timestamp:new Date().toISOString(),execution_type:"workflow_execution"}}]}return a}async executeParallelPhases(e,t){if(0===t.length)return{};if(1===t.length){let a=await this.executePhase(e,t[0]);return{[t[0]]:a}}let a=t.map(async t=>{let a=String(t??"");try{let t=await this.executePhase(e,a);return{phaseId:a,results:t}}catch(t){return o.k.error(`Parallel phase execution error for ${a} in metabox ${e}:`,t),{phaseId:a,results:[{success:!1,data:null,error:t instanceof Error?t.message:"Unknown error",metadata:{metabox_id:e,phase_id:a,timestamp:new Date().toISOString(),execution_type:"parallel_phase_execution"}}]}}}),i=await Promise.all(a),n={};for(let{phaseId:e,results:t}of i){let a=String(e??"");a&&(n[a]=t)}return n}}async function h(e,t){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let a;let{metaBoxId:i,phase:n,context:r}=e.body;if(!i||!r)return t.status(400).json({error:"Missing required parameters"});let s={userId:r.userId,organizationId:r.organizationId,metadata:r.metadata},o=new p(s);return a=n?await o.executePhase(i,n):await o.executeWorkflow(i),t.status(200).json({success:!0,data:a,metadata:{metaBoxId:i,phase:n||"all",timestamp:new Date().toISOString()}})}catch(e){return console.error("Agent execution error:",e),t.status(500).json({success:!1,error:e instanceof Error?e.message:"Unknown error occurred"})}}let _=(0,s.l)(i,"default"),m=(0,s.l)(i,"config"),f=new n.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/agents/execute",pathname:"/api/agents/execute",bundlePath:"",filename:""},userland:i})},8214:(e,t,a)=>{a.d(t,{k:()=>n});class i{setLevel(e){this.level=e}info(e,...t){["info","debug"].includes(this.level)&&console.info(`[INFO] ${e}`,...t)}warn(e,...t){["warn","info","debug"].includes(this.level)&&console.warn(`[WARN] ${e}`,...t)}error(e,...t){["error","warn","info","debug"].includes(this.level)&&console.error(`[ERROR] ${e}`,...t)}debug(e,...t){"debug"===this.level&&console.debug(`[DEBUG] ${e}`,...t)}startTimer(e,t){let a=`timer_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i=performance.now();return"debug"===this.level&&this.debug(`Started timer for operation: ${e}`,{timerId:a,metadata:t}),global.__timers=global.__timers||new Map,global.__timers.set(a,{operation:e,startTime:i,metadata:t}),a}endTimer(e,t){let a=global.__timers;if(!a||!a.has(e))return this.warn(`Timer not found: ${e}`),null;let i=a.get(e),n=performance.now()-i.startTime,r={operation:i.operation,duration:n,timestamp:new Date().toISOString(),metadata:{...i.metadata,...t}};return this.performanceMetrics.push(r),a.delete(e),"debug"===this.level?this.debug(`Completed operation: ${i.operation}`,{duration:`${n.toFixed(2)}ms`,metric:r}):this.info(`Performance: ${i.operation} completed in ${n.toFixed(2)}ms`),r}updateTaskMetrics(e,t){if(this.taskMetrics.total_tasks++,this.taskMetrics.tasks_by_status[e]=(this.taskMetrics.tasks_by_status[e]||0)+1,t&&"completed"===e){let e=this.taskMetrics.average_completion_time,a=this.taskMetrics.tasks_by_status.completed||0;this.taskMetrics.average_completion_time=(e*(a-1)+t)/a}"debug"===this.level&&this.debug("Task metrics updated",{status:e,completionTime:t,metrics:this.taskMetrics})}setQueueLength(e){this.taskMetrics.queue_length=e,"debug"===this.level&&this.debug(`Queue length updated: ${e}`)}updateAgentMetrics(e,t,a,i){let n=this.agentMetrics.get(e);if(n||(n={agent_id:e,agent_name:t,tasks_completed:0,tasks_failed:0,average_execution_time:0,success_rate:0,last_activity:new Date().toISOString()},this.agentMetrics.set(e,n)),a?n.tasks_completed++:n.tasks_failed++,i){let e=n.tasks_completed+n.tasks_failed,t=n.average_execution_time;n.average_execution_time=(t*(e-1)+i)/e}n.success_rate=n.tasks_completed/(n.tasks_completed+n.tasks_failed),n.last_activity=new Date().toISOString(),"debug"===this.level&&this.debug("Agent metrics updated",{agentId:e,success:a,executionTime:i,metrics:n})}getPerformanceReport(){let e=this.performanceMetrics.slice(-100),t=Array.from(this.agentMetrics.values()),a=e.length,i=a>0?e.reduce((e,t)=>e+t.duration,0)/a:0,n=e.length>0?e.reduce((e,t)=>t.duration>e.duration?t:e):null,r=e.length>0?e.reduce((e,t)=>t.duration<e.duration?t:e):null;return{recent_metrics:e,task_metrics:this.taskMetrics,agent_metrics:t,summary:{total_operations:a,average_duration:i,slowest_operation:n,fastest_operation:r}}}clearOldMetrics(e=24){let t=Date.now()-36e5*e;this.performanceMetrics=this.performanceMetrics.filter(e=>new Date(e.timestamp).getTime()>t),"debug"===this.level&&this.debug(`Cleared metrics older than ${e} hours`)}constructor(){this.level="info",this.performanceMetrics=[],this.taskMetrics={total_tasks:0,tasks_by_status:{},average_completion_time:0,queue_length:0},this.agentMetrics=new Map}}let n=new i},7153:(e,t)=>{var a;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return a}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(a||(a={}))},1802:(e,t,a)=>{e.exports=a(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var a=t(t.s=5272);module.exports=a})();