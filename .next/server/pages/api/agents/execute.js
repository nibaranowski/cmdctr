"use strict";(()=>{var e={};e.id=544,e.ids=[544],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},5272:(e,t,a)=>{a.r(t),a.d(t,{config:()=>m,default:()=>g,routeModule:()=>f});var i={};a.r(i),a.d(i,{default:()=>h});var s=a(1802),n=a(7153),r=a(6249),o=a(8214);class c{constructor(e){this.id=`agent_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,this.name=e.name,this.company_id=e.company_id,this.agent_type=e.agent_type,this.status="idle",this.capabilities=e.capabilities||[],this.skills=e.skills||[],this.performance_metrics={tasks_completed:0,tasks_failed:0,average_completion_time_hours:1,success_rate:100,last_activity:new Date().toISOString()},this.availability={is_available:!0,max_concurrent_tasks:e.max_concurrent_tasks||1,current_task_count:0},this.configuration={},this.permissions={can_create_tasks:e.permissions?.can_create_tasks||!1,can_assign_tasks:e.permissions?.can_assign_tasks||!1,can_access_projects:e.permissions?.can_access_projects||!0,can_manage_other_agents:e.permissions?.can_manage_other_agents||!1,can_access_company_data:e.permissions?.can_access_company_data||!0},this.created_at=new Date().toISOString(),this.updated_at=new Date().toISOString(),e.description&&(this.description=e.description),e.metabox_id&&(this.metabox_id=e.metabox_id),e.phase_id&&(this.phase_id=e.phase_id),e.working_hours&&(this.availability.working_hours=e.working_hours),e.configuration?.model&&(this.configuration.model=e.configuration.model),e.configuration?.api_keys&&(this.configuration.api_keys=e.configuration.api_keys),e.configuration?.settings&&(this.configuration.settings=e.configuration.settings),e.configuration?.webhooks&&(this.configuration.webhooks=e.configuration.webhooks)}updateStatus(e){this.status=e,this.updated_at=new Date().toISOString(),("active"===e||"busy"===e)&&(this.last_heartbeat=new Date().toISOString())}async logActivity(e){let t={id:`activity_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,agent_id:this.id,timestamp:new Date().toISOString(),...e};this.performance_metrics.last_activity=t.timestamp,this.updated_at=t.timestamp,o.k.info(`Agent Activity [${this.name}]:`,t)}async handleError(e){return o.k.error(`Agent ${this.name} error:`,e),this.updateStatus("error"),this.performance_metrics.tasks_failed++,this.updateSuccessRate(),await this.logActivity({type:"error",message:e.message,data:{error_stack:e.stack}}),{success:!1,error:e.message,metadata:{agent_id:this.id,agent_name:this.name,metabox_id:this.metabox_id,phase_id:this.phase_id,timestamp:new Date().toISOString()}}}createResult(e,t){return this.performance_metrics.tasks_completed++,this.updateSuccessRate(),this.updateStatus("active"),{success:!0,data:e,metadata:{agent_id:this.id,agent_name:this.name,metabox_id:this.metabox_id,phase_id:this.phase_id,timestamp:new Date().toISOString(),...t}}}updateSuccessRate(){let e=this.performance_metrics.tasks_completed+this.performance_metrics.tasks_failed;e>0&&(this.performance_metrics.success_rate=this.performance_metrics.tasks_completed/e*100)}toAgentModel(){let e={id:this.id,name:this.name,company_id:this.company_id,agent_type:this.agent_type,status:this.status,capabilities:this.capabilities,skills:this.skills,performance_metrics:this.performance_metrics,availability:this.availability,configuration:this.configuration,permissions:this.permissions,created_at:this.created_at,updated_at:this.updated_at};return this.description&&(e.description=this.description),this.metabox_id&&(e.metabox_id=this.metabox_id),this.phase_id&&(e.phase_id=this.phase_id),this.current_core_object_id&&(e.current_core_object_id=this.current_core_object_id),this.last_heartbeat&&(e.last_heartbeat=this.last_heartbeat),this.metadata&&(e.metadata=this.metadata),e}}class l extends c{constructor(e,t){super({...e,name:e.name||"AI Outreach Agent",description:e.description||"AI agent specialized in personalized investor outreach and communication",agent_type:"ai",capabilities:["personalized_outreach","email_automation","linkedin_messaging","follow_up_sequences","response_handling","engagement_tracking"],skills:[{name:"Personalized Communication",level:"expert",description:"Creating highly personalized outreach messages based on investor research"},{name:"Multi-Channel Outreach",level:"advanced",description:"Coordinating outreach across email, LinkedIn, and other channels"},{name:"Follow-up Sequences",level:"advanced",description:"Designing and executing effective follow-up sequences"}]}),this.config={outreach_channels:["email","linkedin"],personalization_level:"high",follow_up_strategy:"multi",tone:"professional",include_tracking:!0,max_daily_outreach:50,...t}}async execute(e){try{let{core_object_id:t,metadata:a}=e;if(!t)return this.handleError(Error("Core object ID is required for outreach"));let i=a?.investor_data;if(!i)return this.handleError(Error("Investor data is required in metadata"));let s=await this.createPersonalizedOutreach(i,e.company_id);return t&&await this.updateCoreObject(t,s),this.createResult(s,{investor_name:i.name,outreach_channels:this.config.outreach_channels,core_object_id:t})}catch(e){return this.handleError(e)}}async createPersonalizedOutreach(e,t){try{this.updateStatus("busy");let t=await this.generatePersonalizedMessages(e),a=this.analyzePersonalizationOpportunities(e),i=this.createFollowUpPlan(e),s=this.calculateSuccessProbability(e,t);return await this.logActivity({type:"outreach_creation",message:`Created personalized outreach for ${e.name}`,data:{investor_name:e.name,message_count:t.length,channels:this.config.outreach_channels}}),this.updateStatus("active"),{messages:t,personalization_insights:a,follow_up_plan:i,success_probability:s}}catch(e){throw this.updateStatus("error"),Error(`Failed to create personalized outreach: ${e}`)}}async sendOutreachMessage(e){try{this.updateStatus("busy");let t=await this.performMessageSend(e);return await this.logActivity({type:"message_sent",message:`Sent ${e.channel} message to ${e.recipient}`,data:{recipient:e.recipient,channel:e.channel,message_id:t.message_id}}),this.updateStatus("active"),t}catch(e){throw this.updateStatus("error"),Error(`Failed to send outreach message: ${e}`)}}async handleResponse(e){try{this.updateStatus("busy");let t=await this.analyzeResponse(e),a=this.decideFollowUp(e,t);return await this.logActivity({type:"response_handled",message:`Handled response from ${e.recipient}`,data:{recipient:e.recipient,sentiment:e.sentiment,should_follow_up:a.should_follow_up}}),this.updateStatus("active"),a}catch(e){throw this.updateStatus("error"),Error(`Failed to handle response: ${e}`)}}async updateCoreObject(e,t){try{new Date().toISOString(),this.id,console.log(`Updating core object ${e} with outreach data`),await this.logActivity({type:"core_object_update",message:`Updated core object ${e} with outreach data`,data:{core_object_id:e}})}catch(e){throw Error(`Failed to update core object: ${e}`)}}async generatePersonalizedMessages(e){let t=[];for(let a of this.config.outreach_channels){let i=await this.createChannelSpecificMessage(e,a);t.push(i)}return t}async createChannelSpecificMessage(e,t){await this.simulateWork(1e3);let a=this.extractPersonalizationData(e);if("email"===t)return{recipient:e.email||`${e.name.toLowerCase().replace(" ",".")}@example.com`,channel:"email",subject:`Partnership opportunity: ${e.focus_areas?.[0]||"SaaS"} company seeking investment`,content:this.generateEmailContent(e,a),personalization_data:a,status:"draft"};if("linkedin"===t)return{recipient:e.linkedin_url||`linkedin.com/in/${e.name.toLowerCase().replace(" ","")}`,channel:"linkedin",content:this.generateLinkedInContent(e,a),personalization_data:a,status:"draft"};throw Error(`Unsupported channel: ${t}`)}generateEmailContent(e,t){let a=e.focus_areas?.[0]||"B2B SaaS";return e.portfolio_size,`Hi ${e.name},

I hope this message finds you well. I came across your impressive work at ${e.firm} and was particularly struck by your focus on ${a} companies.

I noticed you've successfully invested in companies like ${t.similar_companies?.join(", ")||"innovative B2B SaaS companies"}, and I believe there's a strong alignment with what we're building.

Our company has achieved ${t.company_metrics?.arr||"$1M+"} ARR with ${t.company_metrics?.growth_rate||"100%+"} growth, and we're looking for a strategic partner who understands the ${a} space.

Would you be interested in a brief conversation to explore potential synergies? I'd be happy to share more details about our traction and vision.

Best regards,
[Your Name]
[Company Name]`}generateLinkedInContent(e,t){return`Hi ${e.name}, I noticed your work with ${e.firm} and your focus on ${e.focus_areas?.[0]||"B2B SaaS"}. Would love to connect and share what we're building - we've hit ${t.company_metrics?.arr||"$1M+"} ARR and are growing ${t.company_metrics?.growth_rate||"100%+"}. Any interest in a quick chat?`}extractPersonalizationData(e){return{focus_areas:e.focus_areas,investment_stages:e.investment_stages,portfolio_size:e.portfolio_size,similar_companies:e.portfolio?.slice(0,3)||[],company_metrics:{arr:"$1.2M",growth_rate:"150%",customers:45,team_size:12}}}analyzePersonalizationOpportunities(e){let t=[];return e.focus_areas?.length>0&&t.push(`Strong alignment with ${e.focus_areas[0]} focus area`),e.portfolio?.length>0&&t.push(`Can reference similar portfolio companies: ${e.portfolio.slice(0,2).join(", ")}`),e.investment_stages?.length>0&&t.push(`Matches preferred investment stage: ${e.investment_stages[0]}`),t}createFollowUpPlan(e){return{sequence:[{day:3,type:"follow_up",channel:"email",content:"Gentle follow-up on initial outreach"},{day:7,type:"value_add",channel:"linkedin",content:"Share relevant industry insights or company update"},{day:14,type:"final_attempt",channel:"email",content:"Final attempt with different angle"}],triggers:{on_response:"immediate_reply",on_no_response:"continue_sequence",on_negative_response:"respectful_closure"}}}calculateSuccessProbability(e,t){let a=50;return"high"===this.config.personalization_level&&(a+=15),t.length>1&&(a+=10),e.email&&e.linkedin_url&&(a+=10),Math.min(a,95)}async performMessageSend(e){return await this.simulateWork(500),{success:!0,message_id:`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,delivery_status:"delivered",tracking_data:{opened:!1,clicked:!1,replied:!1}}}async analyzeResponse(e){return await this.simulateWork(300),{sentiment:e.sentiment||"neutral",intent:this.detectIntent(e.content),urgency:this.assessUrgency(e.content),next_best_action:this.determineNextAction(e)}}detectIntent(e){let t=e.toLowerCase();return t.includes("interested")||t.includes("sounds good")?"positive_interest":t.includes("not interested")||t.includes("pass")?"negative_response":t.includes("more info")||t.includes("details")?"requesting_info":"neutral"}assessUrgency(e){let t=e.toLowerCase();return t.includes("urgent")||t.includes("asap")?"high":t.includes("soon")||t.includes("this week")?"medium":"low"}determineNextAction(e){return"positive"===e.sentiment?"schedule_meeting":"negative"===e.sentiment?"respectful_closure":"provide_more_info"}decideFollowUp(e,t){let a;let i="negative_response"!==t.intent;if(!i)return{should_follow_up:!1,next_action:"respectful_closure",priority:"low"};let s="medium";return"positive_interest"===t.intent?(a="Great! I'd love to schedule a call to discuss this further. What times work best for you this week?",s="high"):"requesting_info"===t.intent&&(a="I'd be happy to share more details. Would you prefer a pitch deck, financials, or a brief call?",s="medium"),{should_follow_up:i,follow_up_message:a,next_action:t.next_best_action,priority:s}}async simulateWork(e){return new Promise(t=>setTimeout(t,e))}}class d extends c{constructor(e,t){super({...e,name:e.name||"Investor Research Agent",description:e.description||"AI agent specialized in investor research and analysis",agent_type:"ai",capabilities:["investor_research","network_analysis","financial_analysis","deal_flow_analysis","market_research","competitor_analysis"],skills:[{name:"Investor Research",level:"expert",description:"Deep research on investors, their portfolio, and investment thesis"},{name:"Network Analysis",level:"advanced",description:"Mapping investor networks and connections"},{name:"Financial Analysis",level:"advanced",description:"Analyzing investor financials and deal patterns"}]}),this.config={data_sources:["crunchbase","pitchbook","linkedin","twitter","news"],research_depth:"comprehensive",output_format:"structured",include_network_analysis:!0,include_financial_analysis:!0,...t}}async execute(e){try{let{core_object_id:t,metadata:a}=e;if(!t)return this.handleError(Error("Core object ID is required for investor research"));let i=a?.investor_name;if(!i)return this.handleError(Error("Investor name is required in metadata"));let s=await this.researchInvestor(i,e.company_id);return t&&await this.updateCoreObject(t,s),this.createResult(s,{investor_name:i,research_depth:this.config.research_depth,core_object_id:t})}catch(e){return this.handleError(e)}}async researchInvestor(e,t){try{this.updateStatus("busy");let t=await this.performResearch(e);return await this.logActivity({type:"investor_research",message:`Completed research on ${e}`,data:{investor_name:e,research_depth:this.config.research_depth}}),this.updateStatus("active"),t}catch(t){throw this.updateStatus("error"),Error(`Failed to research investor ${e}: ${t}`)}}async analyzePortfolio(e){try{this.updateStatus("busy");let t=await this.performPortfolioAnalysis(e);return await this.logActivity({type:"portfolio_analysis",message:`Analyzed portfolio of ${e.length} companies`,data:{company_count:e.length}}),this.updateStatus("active"),t}catch(e){throw this.updateStatus("error"),Error(`Failed to analyze portfolio: ${e}`)}}async generateInvestorList(e){try{this.updateStatus("busy");let t=await this.performInvestorDiscovery(e);return await this.logActivity({type:"investor_discovery",message:`Generated investor list based on criteria: ${JSON.stringify(e)}`,data:{criteria:e,investor_count:t.investors.length}}),this.updateStatus("active"),t}catch(e){throw this.updateStatus("error"),Error(`Failed to generate investor list: ${e}`)}}async updateCoreObject(e,t){try{new Date().toISOString(),this.id,console.log(`Updating core object ${e} with research data`),await this.logActivity({type:"core_object_update",message:`Updated core object ${e} with research findings`,data:{core_object_id:e}})}catch(e){throw Error(`Failed to update core object: ${e}`)}}async performResearch(e){return await this.simulateWork(2e3),{investor_profile:{name:e,firm:"Example Capital",focus_areas:["SaaS","FinTech","AI/ML"],investment_stages:["Series A","Series B"],avg_check_size:"$5M-$15M",portfolio_size:45,founded:2010},investment_thesis:`${e} focuses on B2B SaaS companies with strong unit economics and clear path to profitability. They prefer companies with $1M+ ARR and 100%+ growth rates.`,portfolio_analysis:{total_investments:45,successful_exits:12,avg_roi:"3.2x",sector_breakdown:{SaaS:60,FinTech:25,"AI/ML":15}},network_connections:[{name:"John Smith",role:"Partner",connection_strength:"strong"},{name:"Jane Doe",role:"Principal",connection_strength:"medium"}],deal_flow_patterns:{avg_deal_flow:"50/month",conversion_rate:"2%",avg_time_to_close:"3 months"},recommendations:["Focus on unit economics in pitch deck","Highlight B2B SaaS metrics","Prepare for technical due diligence","Network with portfolio companies"]}}async performPortfolioAnalysis(e){return await this.simulateWork(1500),{sector_distribution:{SaaS:60,FinTech:25,"AI/ML":15},stage_distribution:{Seed:20,"Series A":40,"Series B":30,"Series C+":10},geographic_distribution:{"US West Coast":50,"US East Coast":30,Europe:15,Other:5},investment_patterns:{avg_check_size:"$8M",follow_on_rate:70,board_seat_rate:40},insights:["Strong preference for B2B SaaS companies","High follow-on investment rate","Active board participation","Geographic concentration in tech hubs"]}}async performInvestorDiscovery(e){return await this.simulateWork(3e3),{investors:[{name:"Sequoia Capital",match_score:95,reasoning:"Perfect alignment with B2B SaaS focus and investment stage",contact_info:{email:"partners@sequoia.com",linkedin:"linkedin.com/company/sequoia"}},{name:"Andreessen Horowitz",match_score:88,reasoning:"Strong AI/ML focus and similar investment thesis",contact_info:{email:"partners@a16z.com",linkedin:"linkedin.com/company/a16z"}}],reasoning:`Based on criteria: ${JSON.stringify(e)}. Focused on investors with proven track record in target sector and stage.`,priority_scores:{"Sequoia Capital":95,"Andreessen Horowitz":88},next_steps:["Prepare customized pitch deck","Research recent investments","Identify warm introduction paths","Prepare financial projections"]}}async simulateWork(e){return new Promise(t=>setTimeout(t,e))}}let u={fundraising:{id:"fundraising",name:"Fundraising",description:"End-to-end fundraising workflow with AI-powered agents",phases:["identifying_investors","conflict_check","network_intro","direct_outreach","automated_intro","scheduling","avatar_negotiation","negotiation","closing"],agents:[{id:"investor_research",name:"Investor Research Agent",description:"Identifies and researches potential investors that match company criteria",phase:"identifying_investors",metaBox:"fundraising",config:{apis:["crunchbase","pitchbook","linkedin"],updateFrequency:"24h"}},{id:"conflict_detection",name:"Conflict Detection Agent",description:"Analyzes potential conflicts with investors portfolio companies",phase:"conflict_check",metaBox:"fundraising",config:{conflictTypes:["direct_competitor","indirect_competitor","market_overlap"],dataSource:["crunchbase","internal_db"]}},{id:"warm_intro_scout",name:"Warm Intro Scout Agent",description:"Identifies potential warm introduction paths to investors",phase:"network_intro",metaBox:"fundraising",config:{networks:["linkedin","internal_network","apollo"],depthLevel:2}},{id:"direct_outreach",name:"Direct Outreach Agent",description:"Manages direct outreach campaigns to investors",phase:"direct_outreach",metaBox:"fundraising",config:{channels:["email","linkedin"],templates:["intro","follow_up","meeting_request"]}},{id:"network_intersection",name:"Network Intersection Agent",description:"Analyzes network intersections for automated introductions",phase:"automated_intro",metaBox:"fundraising",config:{networks:["linkedin","angellist","internal"],minConnectionStrength:7}},{id:"auto_scheduler",name:"Auto Scheduler Agent",description:"Handles meeting scheduling with investors",phase:"scheduling",metaBox:"fundraising",config:{calendars:["google","outlook"],bufferTime:"15m"}},{id:"avatar_pitch",name:"Avatar Pitch Agent",description:"AI avatar for initial pitch meetings and Q&A",phase:"avatar_negotiation",metaBox:"fundraising",config:{models:["gpt4","claude"],knowledgeBase:["pitch_deck","financials","market"]}},{id:"negotiation",name:"Negotiation Agent",description:"Assists in term sheet negotiation and deal structuring",phase:"negotiation",metaBox:"fundraising",config:{templates:["term_sheet","cap_table"],benchmarks:["market_data","historical"]}},{id:"closing",name:"Closing Agent",description:"Manages closing process, documentation and wire transfers",phase:"closing",metaBox:"fundraising",config:{documents:["closing_docs","wire_instructions"],notifications:["email","slack"]}}]}};class _{constructor(){this.agents=new Map,this.capabilities=new Map,this.initializeCapabilities()}static getInstance(){return _.instance||(_.instance=new _),_.instance}initializeCapabilities(){this.capabilities.set("investor_research",{name:"Investor Research",description:"Deep research on investors, their portfolio, and investment thesis",required_skills:["market_research","financial_analysis","network_analysis"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]}),this.capabilities.set("personalized_outreach",{name:"Personalized Outreach",description:"Creating and sending personalized outreach messages",required_skills:["communication","personalization","email_automation"],supported_phases:["fundraising","sales","marketing"],supported_metaboxes:["fundraising","sales","marketing"]}),this.capabilities.set("deal_flow_analysis",{name:"Deal Flow Analysis",description:"Analyzing deal flow patterns and investor behavior",required_skills:["data_analysis","pattern_recognition","financial_modeling"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]}),this.capabilities.set("network_analysis",{name:"Network Analysis",description:"Mapping and analyzing investor networks and connections",required_skills:["network_analysis","graph_theory","relationship_mapping"],supported_phases:["fundraising","sales"],supported_metaboxes:["fundraising","sales"]}),this.capabilities.set("financial_analysis",{name:"Financial Analysis",description:"Analyzing financial data and investment patterns",required_skills:["financial_modeling","data_analysis","valuation"],supported_phases:["fundraising","finance"],supported_metaboxes:["fundraising","finance"]}),this.capabilities.set("content_creation",{name:"Content Creation",description:"Creating marketing content and materials",required_skills:["copywriting","design","brand_strategy"],supported_phases:["marketing"],supported_metaboxes:["marketing"]}),this.capabilities.set("campaign_management",{name:"Campaign Management",description:"Managing marketing campaigns and automation",required_skills:["project_management","automation","analytics"],supported_phases:["marketing"],supported_metaboxes:["marketing"]}),this.capabilities.set("lead_generation",{name:"Lead Generation",description:"Identifying and qualifying sales leads",required_skills:["prospecting","qualification","research"],supported_phases:["sales"],supported_metaboxes:["sales"]}),this.capabilities.set("sales_automation",{name:"Sales Automation",description:"Automating sales processes and follow-ups",required_skills:["automation","crm_management","process_optimization"],supported_phases:["sales"],supported_metaboxes:["sales"]}),this.capabilities.set("feature_prioritization",{name:"Feature Prioritization",description:"Prioritizing product features based on user feedback and business goals",required_skills:["product_management","data_analysis","user_research"],supported_phases:["product"],supported_metaboxes:["product"]}),this.capabilities.set("user_research",{name:"User Research",description:"Conducting user research and gathering feedback",required_skills:["research_methods","data_analysis","user_empathy"],supported_phases:["product"],supported_metaboxes:["product"]})}registerAgent(e){let t={agent:e,metadata:{created_at:new Date().toISOString(),last_updated:new Date().toISOString(),usage_count:0,average_performance:0}};this.agents.set(e.id,t),o.k.info(`Registered agent: ${e.name} (${e.id})`)}unregisterAgent(e){let t=this.agents.delete(e);return t?o.k.info(`Unregistered agent: ${e}`):o.k.warn(`Attempted to unregister non-existent agent: ${e}`),t}getAgent(e){let t=this.agents.get(e);return t||o.k.warn(`Agent not found: ${e}`),t?t.agent:null}getAllAgents(){return o.k.info("Fetching all registered agents"),Array.from(this.agents.values()).map(e=>e.agent)}findAgentsByCapability(e){return this.getAllAgents().filter(t=>t.capabilities.includes(e))}findAgentsByPhase(e){return this.getAllAgents().filter(t=>t.phase_id===e)}findAgentsByMetabox(e){return this.getAllAgents().filter(t=>t.metabox_id===e)}findAgentsByFilter(e){return this.getAllAgents().filter(t=>t.company_id===e.company_id&&(!e.metabox_id||t.metabox_id===e.metabox_id)&&(!e.phase_id||t.phase_id===e.phase_id)&&(!e.agent_type||!!e.agent_type.includes(t.agent_type))&&(!e.status||!!e.status.includes(t.status))&&(!e.capabilities||!!e.capabilities.some(e=>t.capabilities.includes(e)))&&(void 0===e.is_available||t.availability.is_available===e.is_available)&&(!e.current_core_object_id||t.current_core_object_id===e.current_core_object_id)&&(!e.created_at_before||!(t.created_at>e.created_at_before))&&(!e.created_at_after||!(t.created_at<e.created_at_after)))}findBestAgentForTask(e,t,a,i){let s=this.getAllAgents().filter(s=>s.company_id===t&&!!e.every(e=>s.capabilities.includes(e))&&!!s.availability.is_available&&!(s.availability.current_task_count>=s.availability.max_concurrent_tasks)&&(!a||!s.phase_id||s.phase_id===a)&&(!i||!s.metabox_id||s.metabox_id===i));if(0===s.length)return null;let n=s.map(e=>{let t;let a=this.agents.get(e.id);if(!a)return{agent:e,score:0};t=0+.4*a.metadata.average_performance+(.3*(100-e.availability.current_task_count/e.availability.max_concurrent_tasks*100)+.2*e.performance_metrics.success_rate);let i=(Date.now()-new Date(e.performance_metrics.last_activity).getTime())/864e5;return{agent:e,score:t+=.1*Math.max(0,100-10*i)}});return n.sort((e,t)=>t.score-e.score),n[0]?.agent||null}getCapabilities(){return Array.from(this.capabilities.values())}getCapability(e){return this.capabilities.get(e)||null}updateAgentPerformance(e,t){let a=this.agents.get(e);if(a){a.metadata.usage_count++,a.metadata.last_updated=new Date().toISOString();let i=a.metadata.average_performance,s=a.metadata.usage_count;a.metadata.average_performance=(i*(s-1)+t)/s,o.k.info(`Updated performance for agent ${e}: new avg=${a.metadata.average_performance}`)}else o.k.warn(`Attempted to update performance for non-existent agent: ${e}`)}createAgentFromTemplate(e,t){switch(e){case"investor_research":return o.k.info("Creating InvestorResearchAgent from template"),new d(t);case"ai_outreach":return o.k.info("Creating AIOutreachAgent from template"),new l(t);default:return o.k.warn(`Unknown agent template: ${e}`),null}}getAgentTemplates(){return[{name:"investor_research",description:"AI agent specialized in investor research and analysis",capabilities:["investor_research","network_analysis","financial_analysis"],supported_phases:["fundraising"],supported_metaboxes:["fundraising"]},{name:"ai_outreach",description:"AI agent specialized in personalized investor outreach",capabilities:["personalized_outreach","email_automation","follow_up_sequences"],supported_phases:["fundraising","sales","marketing"],supported_metaboxes:["fundraising","sales","marketing"]}]}getAgentStats(){let e=this.getAllAgents(),t=e.length,a=e.filter(e=>"active"===e.status).length,i={},s={};e.forEach(e=>{i[e.agent_type]=(i[e.agent_type]||0)+1,s[e.status]=(s[e.status]||0)+1});let n=e.reduce((e,t)=>e+t.performance_metrics.success_rate,0);return{total_agents:t,active_agents:a,agents_by_type:i,agents_by_status:s,average_performance:t>0?n/t:0}}}class p{constructor(){this.tasks=new Map,this.collaborations=new Map,this.taskQueue=[],this.registry=_.getInstance()}static getInstance(){return p.instance||(p.instance=new p),p.instance}async createTask(e,t,a,i,s,n="medium",r){let c={id:`task_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,type:e,priority:n,status:"pending",core_object_id:t,company_id:a,capabilities_required:i,context:s,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return s.phase_id&&(c.phase_id=s.phase_id),s.metabox_id&&(c.metabox_id=s.metabox_id),r&&(c.metadata=r),this.tasks.set(c.id,c),this.taskQueue.push(c.id),this.taskQueue.sort((e,t)=>{let a=this.tasks.get(e),i=this.tasks.get(t);if(!a||!i)return 0;let s={urgent:4,high:3,medium:2,low:1};return s[i.priority]-s[a.priority]}),o.k.setQueueLength(this.taskQueue.length),o.k.updateTaskMetrics("pending"),o.k.info(`Created task: ${c.id} (${e}) with priority ${n}`),c}async assignTask(e){let t=this.tasks.get(e);if(!t)throw o.k.error(`Task not found: ${e}`),Error(`Task not found: ${e}`);if("pending"!==t.status)throw o.k.error(`Task ${e} is not in pending status`),Error(`Task ${e} is not in pending status`);let a=this.registry.findBestAgentForTask(t.capabilities_required,t.company_id,t.phase_id,t.metabox_id);return a?a.availability.current_task_count>=a.availability.max_concurrent_tasks?(o.k.warn(`Agent ${a.id} is at capacity`),null):(t.assigned_agent_id=a.id,t.status="in_progress",t.updated_at=new Date().toISOString(),a.availability.current_task_count++,a.current_core_object_id=t.core_object_id,o.k.info(`Assigned task ${e} to agent ${a.name} (${a.id})`),a):(o.k.warn(`No suitable agent found for task ${e}`),null)}async executeTask(e){let t=this.tasks.get(e);if(!t)throw o.k.error(`Task not found: ${e}`),Error(`Task not found: ${e}`);if(!t.assigned_agent_id)throw o.k.error(`Task ${e} is not assigned to an agent`),Error(`Task ${e} is not assigned to an agent`);let a=this.registry.getAgent(t.assigned_agent_id);if(!a)throw o.k.error(`Assigned agent not found: ${t.assigned_agent_id}`),Error(`Assigned agent not found: ${t.assigned_agent_id}`);let i=o.k.startTimer("task_execution",{taskId:e,agentId:a.id,agentName:a.name,taskType:t.type});try{o.k.info(`Executing task ${e} with agent ${a.name}`);let s=await a.execute(t.context);t.status=s.success?"completed":"failed",t.result=s.data,t.error=s.error,t.completed_at=new Date().toISOString(),t.updated_at=new Date().toISOString(),a.availability.current_task_count--,a.availability.current_task_count<0&&(a.availability.current_task_count=0),s.success?this.registry.updateAgentPerformance(a.id,100):this.registry.updateAgentPerformance(a.id,0);let n=o.k.endTimer(i,{success:s.success,taskStatus:t.status});return n&&(o.k.updateTaskMetrics(t.status,n.duration),o.k.updateAgentMetrics(String(a.id??""),String(a.name??""),s.success,n.duration)),o.k.info(`Task ${e} ${s.success?"completed":"failed"}`),s}catch(n){o.k.error(`Error executing task ${e} with agent ${a?.name||"unknown"}:`,n);let s=o.k.endTimer(i,{success:!1,error:n instanceof Error?n.message:"Unknown error"});throw s&&(o.k.updateTaskMetrics("failed",s.duration),o.k.updateAgentMetrics(String(a.id??""),String(a.name??""),!1,s.duration)),t.status="failed",t.error=n instanceof Error?n.message:"Unknown error",t.updated_at=new Date().toISOString(),a.availability.current_task_count--,a.availability.current_task_count<0&&(a.availability.current_task_count=0),o.k.error(`Task ${e} execution failed:`,n),n}}async createCollaboration(e,t,a,i="parallel"){if(!this.tasks.get(e))throw Error(`Task not found: ${e}`);let s={task_id:e,primary_agent_id:t,collaborating_agents:a,collaboration_type:i,status:"active",created_at:new Date().toISOString()},n=`collab_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return this.collaborations.set(n,s),o.k.info(`Created collaboration for task ${e} with ${a.length} agents`),s}async executeCollaboration(e){let t=this.collaborations.get(e);if(!t)throw Error(`Collaboration not found: ${e}`);let a=this.tasks.get(t.task_id);if(!a)throw Error(`Task not found: ${t.task_id}`);let i=[];try{if("parallel"===t.collaboration_type){let e=t.collaborating_agents.map(async e=>{let i=this.registry.getAgent(e.agent_id);if(!i)throw Error(`Collaborating agent not found: ${e.agent_id}`);let s={...a.context,metadata:{...a.context.metadata,collaboration_role:e.role,primary_agent_id:t.primary_agent_id,contribution:e.contribution}};return await i.execute(s)}),s=await Promise.all(e);i.push(...s)}else if("sequential"===t.collaboration_type)for(let e of t.collaborating_agents){let s=this.registry.getAgent(e.agent_id);if(!s)throw Error(`Collaborating agent not found: ${e.agent_id}`);let n={...a.context,metadata:{...a.context.metadata,collaboration_role:e.role,primary_agent_id:t.primary_agent_id,contribution:e.contribution,previous_results:i}},r=await s.execute(n);i.push(r)}else if("review"===t.collaboration_type){let e=this.registry.getAgent(t.primary_agent_id);if(!e)throw Error(`Primary agent not found: ${t.primary_agent_id}`);let s=await e.execute(a.context);for(let e of(i.push(s),t.collaborating_agents)){let t=this.registry.getAgent(e.agent_id);if(!t)continue;let n={...a.context,metadata:{...a.context.metadata,collaboration_role:"reviewer",primary_result:s,contribution:e.contribution}},r=await t.execute(n);i.push(r)}}return t.status="completed",t.completed_at=new Date().toISOString(),o.k.info(`Collaboration ${e} completed with ${i.length} results`),i}catch(a){throw t.status="failed",o.k.error(`Collaboration ${e} failed:`,a),a}}async handoffTask(e,t,a){let i=this.tasks.get(e);if(!i)throw Error(`Task not found: ${e}`);let s=this.registry.getAgent(t);if(!s)throw Error(`Target agent not found: ${t}`);if(!i.capabilities_required.every(e=>s.capabilities.includes(e)))throw Error(`Target agent ${t} does not have required capabilities`);if(s.availability.current_task_count>=s.availability.max_concurrent_tasks)throw Error(`Target agent ${t} is at capacity`);if(i.assigned_agent_id){let e=this.registry.getAgent(i.assigned_agent_id);e&&(e.availability.current_task_count--,e.availability.current_task_count<0&&(e.availability.current_task_count=0))}return i.assigned_agent_id=t,i.updated_at=new Date().toISOString(),i.metadata={...i.metadata,handoff_reason:a,handoff_timestamp:new Date().toISOString()},s.availability.current_task_count++,s.current_core_object_id=i.core_object_id,o.k.info(`Handed off task ${e} from ${i.assigned_agent_id} to ${t}: ${a}`),!0}getTask(e){return this.tasks.get(e)||null}getTasksByStatus(e){return Array.from(this.tasks.values()).filter(t=>t.status===e)}getTasksByAgent(e){return Array.from(this.tasks.values()).filter(t=>t.assigned_agent_id===e)}getTasksByCompany(e){return Array.from(this.tasks.values()).filter(t=>t.company_id===e)}getTaskQueue(){return this.taskQueue.map(e=>this.tasks.get(e)).filter(Boolean)}getCollaboration(e){return this.collaborations.get(e)||null}getCollaborationsByTask(e){return Array.from(this.collaborations.values()).filter(t=>t.task_id===e)}getOrchestratorStats(){let e=Array.from(this.tasks.values()),t=e.length,a={},i={};e.forEach(e=>{a[e.status]=(a[e.status]||0)+1,i[e.priority]=(i[e.priority]||0)+1});let s=Array.from(this.collaborations.values()).filter(e=>"active"===e.status).length,n=e.filter(e=>"completed"===e.status&&e.completed_at);return{total_tasks:t,tasks_by_status:a,tasks_by_priority:i,active_collaborations:s,average_task_completion_time_hours:n.length>0?n.reduce((e,t)=>{let a=new Date(t.created_at).getTime();return e+(new Date(t.completed_at).getTime()-a)/36e5},0)/n.length:0}}getPhaseId(e){return"string"==typeof e?e:e&&"string"==typeof e.id?e.id:""}async executePhase(e,t){if(!u[e])throw o.k.error(`Meta box ${e} not found`),Error(`Meta box ${e} not found`);let a=function(e,t){let a=u[e];return a?a.agents.filter(e=>e.phase===t):[]}(e,t);if(0===a.length)throw o.k.error(`No agents found for phase ${t} in meta box ${e}`),Error(`No agents found for phase ${t} in meta box ${e}`);let i=[];for(let s of a)try{let a=String(t??""),n=this.registry.findAgentsByFilter({company_id:s.company_id||"",metabox_id:e,phase_id:a}).find(e=>e.name===String(s.name??""));if(!n)throw o.k.error(`Agent instance not found for ${String(s.name??"")} (id: ${String(s.id??"")}) in phase ${a}, metabox ${e}`),Error(`Agent instance not found for ${String(s.name??"")}`);let r=await n.execute({metabox_id:e,phase_id:a,company_id:s.company_id||"",metadata:{execution_type:"phase_execution",phase_id:a,meta_box_id:e}});i.push(r)}catch(n){let a=String(t??"");o.k.error(`Agent execution error for agent ${String(s.name??"")} (id: ${String(s.id??"")}) in phase ${a}, metabox ${e}:`,n),i.push({success:!1,data:null,error:n instanceof Error?n.message:"Unknown error",metadata:{agent_id:String(s.id??""),agent_name:String(s.name??""),metabox_id:e,phase_id:a,timestamp:new Date().toISOString(),execution_type:"phase_execution"}})}return i}async executeWorkflow(e){let t=u[e];if(!t)throw Error(`Meta box ${e} not found`);let a={};for(let i of t.phases)try{let t=this.getPhaseId(i)||"";a[t]=await this.executePhase(e,t)}catch(s){let t=this.getPhaseId(i)||"";o.k.error(`Phase execution error for ${t} in metabox ${e}:`,s),a[t]=[{success:!1,data:null,error:s instanceof Error?s.message:"Unknown error",metadata:{metabox_id:e,phase_id:t,timestamp:new Date().toISOString(),execution_type:"workflow_execution"}}]}return a}async executeParallelPhases(e,t){if(0===t.length)return{};if(1===t.length){let a=await this.executePhase(e,t[0]);return{[t[0]]:a}}let a=t.map(async t=>{let a=String(t??"");try{let t=await this.executePhase(e,a);return{phaseId:a,results:t}}catch(t){return o.k.error(`Parallel phase execution error for ${a} in metabox ${e}:`,t),{phaseId:a,results:[{success:!1,data:null,error:t instanceof Error?t.message:"Unknown error",metadata:{metabox_id:e,phase_id:a,timestamp:new Date().toISOString(),execution_type:"parallel_phase_execution"}}]}}}),i=await Promise.all(a),s={};for(let{phaseId:e,results:t}of i){let a=String(e??"");a&&(s[a]=t)}return s}}async function h(e,t){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let a;let{metaBoxId:i,phase:s,context:n}=e.body;if(!i||!n)return t.status(400).json({error:"Missing required parameters"});let r={userId:n.userId,organizationId:n.organizationId,metadata:n.metadata},o=new p(r);return a=s?await o.executePhase(i,s):await o.executeWorkflow(i),t.status(200).json({success:!0,data:a,metadata:{metaBoxId:i,phase:s||"all",timestamp:new Date().toISOString()}})}catch(e){return console.error("Agent execution error:",e),t.status(500).json({success:!1,error:e instanceof Error?e.message:"Unknown error occurred"})}}let g=(0,r.l)(i,"default"),m=(0,r.l)(i,"config"),f=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/agents/execute",pathname:"/api/agents/execute",bundlePath:"",filename:""},userland:i})},8214:(e,t,a)=>{a.d(t,{k:()=>s});class i{setLevel(e){this.level=e}info(e,...t){["info","debug"].includes(this.level)&&console.info(`[INFO] ${e}`,...t)}warn(e,...t){["warn","info","debug"].includes(this.level)&&console.warn(`[WARN] ${e}`,...t)}error(e,...t){["error","warn","info","debug"].includes(this.level)&&console.error(`[ERROR] ${e}`,...t)}debug(e,...t){"debug"===this.level&&console.debug(`[DEBUG] ${e}`,...t)}startTimer(e,t){let a=`timer_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i=performance.now();return"debug"===this.level&&this.debug(`Started timer for operation: ${e}`,{timerId:a,metadata:t}),global.__timers=global.__timers||new Map,global.__timers.set(a,{operation:e,startTime:i,metadata:t}),a}endTimer(e,t){let a=global.__timers;if(!a||!a.has(e))return this.warn(`Timer not found: ${e}`),null;let i=a.get(e),s=performance.now()-i.startTime,n={operation:i.operation,duration:s,timestamp:new Date().toISOString(),metadata:{...i.metadata,...t}};return this.performanceMetrics.push(n),a.delete(e),"debug"===this.level?this.debug(`Completed operation: ${i.operation}`,{duration:`${s.toFixed(2)}ms`,metric:n}):this.info(`Performance: ${i.operation} completed in ${s.toFixed(2)}ms`),n}updateTaskMetrics(e,t){if(this.taskMetrics.total_tasks++,this.taskMetrics.tasks_by_status[e]=(this.taskMetrics.tasks_by_status[e]||0)+1,t&&"completed"===e){let e=this.taskMetrics.average_completion_time,a=this.taskMetrics.tasks_by_status.completed||0;this.taskMetrics.average_completion_time=(e*(a-1)+t)/a}"debug"===this.level&&this.debug("Task metrics updated",{status:e,completionTime:t,metrics:this.taskMetrics})}setQueueLength(e){this.taskMetrics.queue_length=e,"debug"===this.level&&this.debug(`Queue length updated: ${e}`)}updateAgentMetrics(e,t,a,i){let s=this.agentMetrics.get(e);if(s||(s={agent_id:e,agent_name:t,tasks_completed:0,tasks_failed:0,average_execution_time:0,success_rate:0,last_activity:new Date().toISOString()},this.agentMetrics.set(e,s)),a?s.tasks_completed++:s.tasks_failed++,i){let e=s.tasks_completed+s.tasks_failed,t=s.average_execution_time;s.average_execution_time=(t*(e-1)+i)/e}s.success_rate=s.tasks_completed/(s.tasks_completed+s.tasks_failed),s.last_activity=new Date().toISOString(),"debug"===this.level&&this.debug("Agent metrics updated",{agentId:e,success:a,executionTime:i,metrics:s})}getPerformanceReport(){let e=this.performanceMetrics.slice(-100),t=Array.from(this.agentMetrics.values()),a=e.length,i=a>0?e.reduce((e,t)=>e+t.duration,0)/a:0,s=e.length>0?e.reduce((e,t)=>t.duration>e.duration?t:e):null,n=e.length>0?e.reduce((e,t)=>t.duration<e.duration?t:e):null;return{recent_metrics:e,task_metrics:this.taskMetrics,agent_metrics:t,summary:{total_operations:a,average_duration:i,slowest_operation:s,fastest_operation:n}}}clearOldMetrics(e=24){let t=Date.now()-36e5*e;this.performanceMetrics=this.performanceMetrics.filter(e=>new Date(e.timestamp).getTime()>t),"debug"===this.level&&this.debug(`Cleared metrics older than ${e} hours`)}constructor(){this.level="info",this.performanceMetrics=[],this.taskMetrics={total_tasks:0,tasks_by_status:{},average_completion_time:0,queue_length:0},this.agentMetrics=new Map}}let s=new i},7153:(e,t)=>{var a;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return a}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(a||(a={}))},1802:(e,t,a)=>{e.exports=a(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var a=t(t.s=5272);module.exports=a})();